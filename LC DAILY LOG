https://leetcode.com/problems/number-of-matching-subsequences/discuss/?currentPage=1&orderBy=most_relevant&query=recursion -- LEARNING: SUBSTRING IN RECURSION WILL INCREASE COMPLEXITY, 
Always try to think of the intuitive solution first then try to solve for complexity. Don't go to the complex solution first.

https://leetcode.com/problems/reverse-linked-list-ii/solution/ -- Always try with pen and paper, it will help in writing cleaner code. the code that i written was accepted but not clean.
good question, can be done with two pointer/ recursion / creating new list. follow up 
reverse a link list using recursion.
//reference
static Node reverse(Node head) 
    { 
        if (head == null || head.next == null) 
            return head; 
  
        /* reverse the rest list and put 
        the first element at the end */
        Node rest = reverse(head.next); 
        head.next.next = head; 
  
        /* tricky step -- see the diagram */
        head.next = null; 
  
        /* fix the head pointer */
        return rest; 
    } 



Search a 2D Matrix II -- tricky one not able to come up with logic easily. TODO
