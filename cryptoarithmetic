import java.io.*;
import java.util.*;

public class Main {

  public static void main(String[] args) {
    Scanner scn = new Scanner(System.in);
    String s1 = scn.nextLine();
    String s2 = scn.nextLine();
    String s3 = scn.nextLine();

    HashMap<Character, Integer> charIntMap = new HashMap<>();
    String unique = "";
    for (int i = 0; i < s1.length(); i++) {
      if (!charIntMap.containsKey(s1.charAt(i))) {
        charIntMap.put(s1.charAt(i), -1);
        unique += s1.charAt(i);
      }
    }

    for (int i = 0; i < s2.length(); i++) {
      if (!charIntMap.containsKey(s2.charAt(i))) {
        charIntMap.put(s2.charAt(i), -1);
        unique += s2.charAt(i);
      }
    }

    for (int i = 0; i < s3.length(); i++) {
      if (!charIntMap.containsKey(s3.charAt(i))) {
        charIntMap.put(s3.charAt(i), -1);
        unique += s3.charAt(i);
      }
    }

    boolean[] usedNumbers = new boolean[10];
    
    solution(unique, 0, charIntMap, usedNumbers, s1, s2, s3);
  }

  
  public static void solution(String unique, int idx, 
							  HashMap<Character, Integer> charIntMap, boolean[] usedNumbers, 
							  String s1, String s2, String s3) {
	    // write your code here
    if(idx == unique.length()){

      if(scoreMatch(charIntMap,s1, s2, s3)){

        print(charIntMap);
        
      }
      return;

    }

    for(int i=0;i<=9;i++){
      if(!usedNumbers[i]){
        char ch = unique.charAt(idx);
        
        charIntMap.put(ch, i);
        usedNumbers[i] = true;

        solution(unique, idx+1, charIntMap, usedNumbers, s1, s2, s3 );

        charIntMap.put(ch, -1);
        usedNumbers[i] = false;
      }
      

    }


  }

  public static boolean scoreMatch(HashMap<Character, Integer> charIntMap, String s1, String s2, String s3){
    String sc1= "";
    String sc2= "";
    String sc3 = "";

    for(int i=0;i<s1.length();i++){
      sc1 += charIntMap.get(s1.charAt(i));

    }

    for(int i=0;i<s2.length();i++){
      sc2 += charIntMap.get(s2.charAt(i));

    }

    for(int i=0;i<s3.length();i++){
      sc3 += charIntMap.get(s3.charAt(i));

    }

    int num1 = Integer.parseInt(sc1) + Integer.parseInt(sc2);
    int num2 = Integer.parseInt(sc3);
    
    return (num1 == num2);


  }

  public static void print(HashMap<Character, Integer> charIntMap){
    for(char ch = 'a'; ch<='z';ch++){
      if(charIntMap.containsKey(ch)){
        System.out.print(ch+"-"+charIntMap.get(ch)+" ");

      }

    }
    System.out.println();


  }

}
